"""removes asset and user tables

Revision ID: 6551b0326bfe
Revises: bb4dd7eddeec
Create Date: 2025-03-03 16:42:15.574237

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6551b0326bfe'
down_revision = 'bb4dd7eddeec'
branch_labels = None
depends_on = None

from sqlalchemy.exc import ProgrammingError

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    try:
        op.drop_constraint('request_user_id_fkey', 'request', type_='foreignkey')
    except ProgrammingError:
        pass

    try:
        op.drop_constraint('scanned_user_id_fkey', 'scanned', type_='foreignkey')
    except ProgrammingError:
        pass

    try:
        op.drop_constraint('request_asset_id_fkey', 'request', type_='foreignkey')
    except ProgrammingError:
        pass

    op.execute(sa.text("DROP TABLE assets CASCADE"))
    op.execute(sa.text("DROP TABLE users CASCADE"))

    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.drop_column('asset_id')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('scanned', schema=None) as batch_op:
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('scanned', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('scanned_user_id_fkey', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('request_asset_id_fkey', 'assets', ['asset_id'], ['id'])
        batch_op.create_foreign_key('request_user_id_fkey', 'users', ['user_id'], ['id'])

    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_table('assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('asset_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=225), autoincrement=False, nullable=False),
    sa.Column('condition', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('space', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='assets_pkey'),
    sa.UniqueConstraint('asset_id', name='assets_asset_id_key')
    )
    # ### end Alembic commands ###
